# Actor 类型模版定义

# 配置字段说明：
# name: Actor 的模版名称，用于在代码中识别和创建 Actor （注: 模版并不是唯一的，可以在 conf.yml 中定义多个
# id: Actor 的唯一标识符，可以包含 {nodeid} 占位符，将被替换为实际的节点 ID
# category: Actor 类型
  # core - 表示基础服务，每个节点必须装载；
  # static - 静态actor node启动时通过 node.yml 中申明进行装载
  # dynamic - 动态 actor 运行时装载，用户自行通过 picker 装载
# unique: 布尔值，表示该 Actor类型 在节点中是否唯一
# options: 可选的 Actor 配置项（在 node.yml 中定义
  # 通用可选项
  # weight - 整数，表示 Actor 的权重，用于负载均衡
  # limit - 整数，表示 Actor 的全局数量限制，0 表示无限制

actor_templates:
  # WebSocket 接收器
  # 用于接受 WebSocket 连接的 Actor
  # 选项:
  # port: WebSocket 服务器端口
- name: "WEBSOCKET_ACCEPTOR"

  # HTTP 接收器
  # 用于接受 HTTP 连接的 Actor
  # 选项:
  # port: HTTP 服务器端口
- name: "HTTP_ACCEPTOR"

  # 角色 actor
- name: "USER"

  # 动态选择器
  # 用于将注册 actor 的行为通过负载均衡的方式调配给不同的 register
  # picker 可以分布在不同的节点上
  # 性能:
  #   I/O 复杂度: O(1)
  #   时间复杂度: O(n log n)，其中 n 是节点数量
- name: "DYNAMIC_PICKER"

  # 动态注册器
  # 用于动态的将 actor 注册到本节点中
- name: "DYNAMIC_REGISTER"

  # actor 控制器
  # 主要提供当前节点中的 actor 的各种管理操作（移除，迁移 ...
- name: "CONTROL"