// Code generated by go generate; DO NOT EDIT.

package template

// Actor 类型模版定义

// 配置字段说明：
// name: Actor 的模版名称，用于在代码中识别和创建 Actor （注: 模版并不是唯一的，可以在 conf.yml 中定义多个
// id: Actor 的唯一标识符，可以包含 {nodeid} 占位符，将被替换为实际的节点 ID
// category: Actor 类型
  // core - 表示基础服务，每个节点必须装载；
  // static - 静态actor node启动时通过 node.yml 中申明进行装载
  // dynamic - 动态 actor 运行时装载，用户自行通过 picker 装载
// unique: 布尔值，表示该 Actor类型 在节点中是否唯一
// options: 可选的 Actor 配置项（在 node.yml 中定义
  // weight - 整数，表示 Actor 的权重，用于负载均衡
  // limit - 整数，表示 Actor 的全局数量限制，0 表示无限制

const (
  // WebSocket 接收器
  // 用于接受 WebSocket 连接的 Actor
  // 选项:
  //   - port: WebSocket 服务器端口
    ACTOR_WEBSOCKET_ACCEPTOR = "WEBSOCKET_ACCEPTOR"

  // weight: 800
  // options 部分被移除，将在 node conf.yml 中定义
  // - port 对外端口号
  // like:
  //options:
  //  port: "8008"
    ACTOR_USER = "USER"

  // 动态选择器
  // 用于动态选择其他 Actor 的 Actor
    ACTOR_DYNAMIC_PICKER = "DYNAMIC_PICKER"

  // 动态注册器
  // 用于动态注册其他 Actor 的 Actor
    ACTOR_DYNAMIC_REGISTER = "DYNAMIC_REGISTER"

// actor 控制
    ACTOR_CONTROL = "CONTROL"

)
